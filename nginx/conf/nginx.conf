user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # CORS configuration
    map $http_origin $cors_origin {
        default $http_origin;
    }

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=web_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=dashboard_limit:10m rate=15r/s;
    limit_req_zone $binary_remote_addr zone=global_limit:10m rate=50r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream definitions
    upstream web_backend {
        server web:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream dashboard_backend {
        server dashboard:5173 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream api_backend {
        server server:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Include SSL configuration
    include /etc/nginx/conf/ssl.conf;

    # Include security headers
    include /etc/nginx/conf/security.conf;

    # Default server block (catch-all)
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        http2 on;
        server_name _;

        ssl_certificate /etc/nginx/ssl/default.crt;
        ssl_certificate_key /etc/nginx/ssl/default.key;

        return 444;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name localhost;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Include site configurations
    include /etc/nginx/conf/sites/*.conf;
}